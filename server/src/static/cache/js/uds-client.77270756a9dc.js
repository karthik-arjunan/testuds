// Generated by CoffeeScript 1.12.7
(function() {
  var $, blockUI, isSupported, launchChrome, launchIE, launchMozilla, launchSafari, ref, result, uds, unblockUI;

  uds = this.uds = (ref = this.uds) != null ? ref : {};

  $ = jQuery;

  uds.chrome = false;

  uds.safari = false;

  uds.ie = false;

  uds.firefox = false;

  uds.reloadCounterBase = 60;

  uds.counterGranurality = 2;

  (function() {
    var ua;
    ua = navigator.userAgent.toLowerCase();
    if (ua.indexOf('safari') !== -1) {
      if (ua.indexOf('chrome') !== -1) {
        uds.chrome = true;
        return;
      } else {
        uds.safari = true;
        return;
      }
    }
    if (ua.indexOf('msie ') !== -1 || ua.indexOf('trident/') !== -1) {
      uds.ie = true;
      return;
    }
    if (ua.indexOf('firefox') !== -1) {
      uds.firefox = true;
    }
  })();

  blockUI = function(message) {
    message = message || "<h1><span class=\"fa fa-spinner fa-spin\"></span> " + gettext("Contacting service...") + "</h1>";
  };

  unblockUI = function() {};

  isSupported = false;

  result = function(url) {
    unblockUI();
    if (isSupported === false) {
      return location.href = url;
    }
  };

  launchIE = function(el, url, alt) {
    var aLink, iFrame;
    if ($('#hiddenUdsLauncherLink').length === 0) {
      $('body').append('<a id="hiddenUdsLauncherLink" style="display:none;" href="#">custom protocol</a>');
    }
    aLink = $('#hiddenUdsLauncherLink')[0];
    isSupported = false;
    aLink.href = url;
    console.log('Case 1');
    if (navigator.appName === 'Microsoft Internet Explorer' && aLink.protocolLong === 'Unknown Protocol') {
      isSupported = false;
      result(alt);
      return;
    }
    if (navigator.msLaunchUri) {
      navigator.msLaunchUri(url, (function() {
        unblockUI();
        isSupported = true;
      }), function() {
        isSupported = false;
        result(alt);
      });
      return;
    }
    console.log('Case 2');
    if ($('#hiddenUdsLauncherIFrame').length === 0) {
      $('body').append('<iframe id="hiddenUdsLauncherIFrame" src="about:blank" style="display:none"></iframe>');
    }
    iFrame = $('#hiddenUdsLauncherIFrame')[0];
    window.onblur = (function() {
      console.log('Blur');
      window.onblur = null;
      isSupported = true;
      result(alt);
    });
    iFrame.contentWindow.location.href = url = url;
    setTimeout((function() {
      window.onblur = null;
      return result(alt);
    }), 2800);
  };

  launchMozilla = function(el, url, alt) {
    var e, iFrame;
    if ($('#hiddenUdsLauncherIFrame').length === 0) {
      $('body').append('<iframe id="hiddenUdsLauncherIFrame" src="about:blank" style="display:none"></iframe>');
    }
    iFrame = $('#hiddenUdsLauncherIFrame')[0];
    isSupported = false;
    console.log("Launching " + url);
    try {
      iFrame.contentWindow.location.href = url;
      isSupported = true;
      result(alt);
    } catch (error) {
      e = error;
      if (e.name === 'NS_ERROR_UNKNOWN_PROTOCOL') {
        isSupported = false;
        result(alt);
      }
    }
  };

  launchChrome = function(el, url, alt) {
    isSupported = false;
    el.focus();
    window.onblur = function() {
      isSupported = true;
      window.onblur = null;
      result(alt);
    };
    location.href = url;
    setTimeout((function() {
      window.onblur = null;
      if (isSupported === false) {
        result(alt);
      }
    }), 2800);
  };

  launchSafari = function(el, url, alt) {
    var iFrame;
    if ($('#hiddenUdsLauncherIFrame').length === 0) {
      $('body').append('<iframe id="hiddenUdsLauncherIFrame" src="about:blank" style="display:none"></iframe>');
    }
    iFrame = $('#hiddenUdsLauncherIFrame')[0];
    isSupported = false;
    el.focus();
    window.onblur = function() {
      isSupported = true;
      result(alt);
    };
    iFrame.contentWindow.location.href = url;
    return setTimeout((function() {
      window.onblur = null;
      return result(alt);
    }), 2800);
  };

  uds.launch = function(el, url, alt) {
    if (url === void 0) {
      url = el.attr('data-href');
      url = url != null ? url : el.attr('href');
    }
    if (alt === void 0) {
      alt = el.attr('data-href-alt');
    }
    blockUI();
    url = clientRest + '/' + url.split('//')[1];
    $.ajax({
      url: url,
      type: "GET",
      dataType: "json",
      success: function(data) {
        if ((data.error != null) && data.error !== '') {
          unblockUI();
          alert(data.error);
        } else {
          if (window.location.protocol === 'https:') {
            data.url = data.url.replace('uds://', 'udss://');
          }
          if (bypassPluginDetection === false) {
            uds.doLaunch(el, data.url, alt);
          } else {
            window.location = data.url;
          }
        }
      },
      error: function(jqXHR, textStatus, errorThrown) {
        unblockUI();
        alert(gettext('Error accessing service: ') + textStatus);
      }
    });
  };

  uds.doLaunch = function(el, url, alt) {
    if (uds.firefox) {
      launchMozilla(el, url, alt);
    } else if (uds.chrome) {
      launchChrome(el, url, alt);
    } else if (uds.safari) {
      launchSafari(el, url, alt);
    } else if (uds.ie) {
      launchIE(this, url, alt);
    }
  };

  uds.onLink = function() {
    $('.uds-service-link').on('click', (function(e) {
      e.preventDefault();
      uds.launch($(this));
    }));
  };

  uds.resetReloadCounter = function() {
    return uds.reloadCounter = uds.reloadCounterBase;
  };

  uds.setReload = function() {
    return setTimeout(uds.reload, uds.counterGranurality * 1000);
  };

  uds.reload = function() {
    if (uds.reloadCounter === 0) {
      return window.location.href = window.location.href.split('?')[0].split('#')[0] + '?tab=' + $("ul#services-tabs li.active").attr('data-name');
    } else {
      uds.reloadCounter -= 1;
      return uds.setReload();
    }
  };

}).call(this);
