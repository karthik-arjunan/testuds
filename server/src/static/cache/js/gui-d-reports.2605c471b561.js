// Generated by CoffeeScript 1.12.7
(function() {
  gui.reports = new GuiElement(api.reports, "reports");

  gui.reports.link = function(event) {
    "use strict";
    api.templates.get("reports", function(tmpl) {
      var tableId;
      gui.clearWorkspace();
      gui.appendToWorkspace(api.templates.evaluate(tmpl, {
        reports: "reports-placeholder"
      }));
      gui.setLinksEvents();
      tableId = gui.reports.table({
        icon: 'reports',
        container: "reports-placeholder",
        rowSelect: "single",
        buttons: [
          {
            permission: api.permissions.MANAGEMENT,
            text: gettext("Generate report"),
            css: "disabled",
            click: function(selecteds, value, btn, tbl, refreshFnc) {
              var val;
              if (selecteds.length !== 1) {
                return;
              }
              val = selecteds[0];
              gui.tools.blockUI();
              api.reports.gui(val.id, (function(guiDefinition) {
                gui.tools.unblockUI();
                return gui.forms.launchModal({
                  title: val.name,
                  fields: guiDefinition,
                  item: {
                    id: val.id
                  },
                  actionButton: '<button type="button" class="btn btn-primary button-accept">' + gettext('Generate report') + '</button>',
                  success: function(form_selector, closeFnc) {
                    var fields;
                    fields = gui.forms.read(form_selector);
                    gui.doLog(fields);
                    gui.tools.blockUI();
                    return api.reports.save(fields, (function(data) {
                      var content;
                      gui.tools.unblockUI();
                      closeFnc();
                      gui.doLog(data);
                      if (data.encoded) {
                        content = base64.decode(data.data);
                      } else {
                        content = data.data;
                      }
                      setTimeout((function() {
                        return saveAs(new Blob([content], {
                          type: data.content_type
                        }), data.filename);
                      }), 100);
                    }), gui.failRequestModalFnc(gettext('Error creating report'), true));
                  }
                });
              }), gui.failRequestModalFnc(gettext('Error obtaining report description'), true));
              return;
            },
            select: function(selecteds, clicked, btn, tbl, refreshFnc) {
              gui.doLog("Selected", selecteds);
              if (selecteds.length === 0) {
                btn.addClass("disabled");
              } else {
                btn.removeClass("disabled");
              }
            }
          }
        ],
        onRowDeselect: function() {},
        onRowSelect: function(selected) {},
        onRefresh: function() {}
      });
    });
    return false;
  };

}).call(this);
