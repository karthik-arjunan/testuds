// Generated by CoffeeScript 1.12.7
(function() {
  gui.servicesPools.accessCalendars = function(servPool, info) {
    var accessCalendars, accessCalendarsTable, accessList;
    accessList = ['ALLOW', 'DENY'];
    accessCalendars = new GuiElement(api.servicesPools.detail(servPool.id, "access", {
      permission: servPool.permission
    }), "access");
    accessCalendarsTable = accessCalendars.table({
      doNotLoadData: true,
      icon: 'assigned',
      container: "access-placeholder",
      rowSelect: "multi",
      buttons: ["new", "edit", "delete", "xls"],
      onCheck: function(action, selected) {
        var i, len, v;
        if (action === 'edit') {
          return true;
        }
        for (i = 0, len = selected.length; i < len; i++) {
          v = selected[i];
          if (v.id === -1) {
            return false;
          }
        }
        return true;
      },
      onData: function(data) {
        $.each(data, function(index, value) {
          return value.calendar = gui.fastLink(value.calendar, value.calendarId, 'gui.servicesPools.fastLink', 'goCalendarLink');
        });
        data.push({
          id: -1,
          calendar: '-',
          priority: '<span style="visibility: hidden;font-size: 0px;">10000000</span>FallBack',
          access: servPool.fallbackAccess
        });
        return gui.doLog(data);
      },
      onNew: function(value, table, refreshFnc) {
        api.templates.get("pool_add_access", function(tmpl) {
          api.calendars.overview(function(data) {
            var modalId;
            modalId = gui.launchModal(gettext("Add access calendar"), api.templates.evaluate(tmpl, {
              calendars: data,
              priority: 1,
              calendarId: '',
              accessList: accessList,
              access: 'ALLOW'
            }));
            $(modalId + " .button-accept").on("click", function(event) {
              var access, calendar, priority;
              priority = $(modalId + " #id_priority").val();
              calendar = $(modalId + " #id_calendar_select").val();
              access = $(modalId + " #id_access_select").val();
              accessCalendars.rest.create({
                calendarId: calendar,
                access: access,
                priority: priority
              }, function(data) {
                $(modalId).modal("hide");
                refreshFnc();
              });
            });
            gui.tools.applyCustoms(modalId);
          });
        });
      },
      onEdit: function(value, event, table, refreshFnc) {
        if (value.id === -1) {
          api.templates.get("pool_access_default", function(tmpl) {
            var modalId;
            modalId = gui.launchModal(gettext("Default fallback access"), api.templates.evaluate(tmpl, {
              accessList: accessList,
              access: servPool.fallbackAccess
            }));
            $(modalId + " .button-accept").on("click", function(event) {
              var access;
              access = $(modalId + " #id_access_select").val();
              servPool.fallbackAccess = access;
              return gui.servicesPools.rest.setFallbackAccess(servPool.id, access, function(data) {
                $(modalId).modal("hide");
                refreshFnc();
              });
            });
            return gui.tools.applyCustoms(modalId);
          });
          return;
        }
        return api.templates.get("pool_add_access", function(tmpl) {
          accessCalendars.rest.item(value.id, function(item) {
            api.calendars.overview(function(data) {
              var modalId;
              gui.doLog("Item: ", item);
              modalId = gui.launchModal(gettext("Edit access calendar"), api.templates.evaluate(tmpl, {
                calendars: data,
                priority: item.priority,
                calendarId: item.calendarId,
                accessList: accessList,
                access: item.access
              }));
              $(modalId + " .button-accept").on("click", function(event) {
                var access, calendar, priority;
                priority = $(modalId + " #id_priority").val();
                calendar = $(modalId + " #id_calendar_select").val();
                access = $(modalId + " #id_access_select").val();
                accessCalendars.rest.save({
                  id: item.id,
                  calendarId: calendar,
                  access: access,
                  priority: priority
                }, function(data) {
                  $(modalId).modal("hide");
                  refreshFnc();
                });
              });
              gui.tools.applyCustoms(modalId);
            });
          });
        });
      },
      onDelete: gui.methods.del(accessCalendars, gettext("Remove access calendar"), gettext("Access calendar removal error"))
    });
    return [accessCalendarsTable];
  };

}).call(this);
